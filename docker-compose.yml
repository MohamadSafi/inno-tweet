version: "3"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shared_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init/init.sh:/docker-entrypoint-initdb.d/init.sh
    # ports:
    # - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  message-service:
    build: ./message-service
    container_name: message-service
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  like-service:
    build: ./like-service
    container_name: like-service
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - user-service
      - message-service
      - like-service

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
